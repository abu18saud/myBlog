html {
    margin: 0;
    padding: 0;
}
body {
    background:url("http://www.sololearn.com/images/bg2.jpg");
    font-family: 'Handlee', cursive;
    font-size: 13pt;
    background-color: #efefef;
    padding: 10px;
    margin: 0;
}
nav {
    padding: 50px 0;
    min-width: 500px; 
}
nav ul {
    background: Linear-gradient(90deg, 
     rgba(255, 255, 255, 0) 0%, 
     rgba(255, 255, 255, 0.2) 25%, 
     rgba(255, 255, 255, 0.2) 75%, 
     rgba(255, 255, 255, 0) 100%);
    box-shadow: 0 0 25px rgba(0, 0, 0, 0.1),
     inset 0 0 1px rgba(255, 255, 255, 0.6);
}
nav ul li {
    display: inline-block;
}
nav ul li a {
    padding: 10px; 
    color: #FFFFFF;
    font-size: 18px;
    font-family: Arial;
    text-decoration: none;
    display: block;
 }
 div {
    /*float: left;
    width: 300px; 
    height: 100px;
    margin: 4px;
    color: #FFF;  */
    /*background: linear-gradient(DeepSkyBlue, Black);
    float: left;
    width: 300px; 
    height: 100px;
    margin: 4px;
    color: #FFF;  
    background: linear-gradient(blue, yellow, green, pink, white);
    In addition to percentages, you can also use px, em, and so on, to specify the color stops.
If you use the same color stop position for two colors, a sharp line will be created between them.
    background: linear-gradient(blue 20%, yellow 30%, green 85%);
    background: linear-gradient(red 20%, green 20%, green 80%, blue 80%);

    */

}
/* Direction of the Gradient */
div.first {
    float: left;
    width: 300px; 
    height: 100px;
    margin: 4px;
    color: #FFF;  
    background:-webkit-linear-gradient(left, blue, green, white);
    background:-moz-linear-gradient(left, blue, green, white);
    background:-ms-linear-gradient(left, blue, green, white);
} 
div.second { 
    float: left;
    width: 300px; 
    height: 100px;
    margin: 4px;
    background:-webkit-linear-gradient(bottom, blue, green, white);
    background:-moz-linear-gradient(bottom, blue, green, white);
    background:-ms-linear-gradient(bottom, blue, green, white);
}
/*Angle of the Gradient*/
div.first {
    float: left;
    width: 300px; 
    height: 100px;
    margin: 4px;
    color: #FFF;
    background: -webkit-linear-gradient(bottom left, blue, green, white);
    background: -moz-linear-gradient(bottom left, blue, green, white);
    background: -ms-linear-gradient(bottom left, blue, green, white);
}
div.second {
    float: left;
    width: 300px; 
    height: 100px;
    margin: 4px;
    background: -webkit-linear-gradient(100deg, blue, green, white);
    background: -moz-linear-gradient(100deg, blue, green, white);
    background: -ms-linear-gradient(100deg, blue, green, white);
}
/*Repeating a Linear-Gradient*/
/*div {
    float: left;
    width: 300px; 
    height: 100px;
    margin: 4px;
    color: #FFF;
    background: repeating-linear-gradient(blue, green 20px);
}*/
h1 {
    font-size: 15pt;
    color: #20bcd5;
    text-align: center;
    padding: 18px 0 18px 0;
    margin: 0 0 10px 0;
}
h1 span {
    border: 4px dashed #20bcd5;
    padding: 10px;
    /*text-shadow: 5px 10px 2px #93968f, -3px 6px 5px #58d1e3;*/
}
p {
    padding: 0;
    margin: 0;
}
.img-circle {
    border: 3px solid white;
    border-radius: 50%;
}
.section {
    background-color: #fff;
    padding: 15px;
    margin-bottom: 10px;
    border-radius: 0 20px 10px 15px;
    box-shadow: inset 10px 10px 5px #888888, inset -10px -10px 5px #888888, -10px -10px 5px -5px #888888, 0 0 10px 4px #FF6347, 0 0 10px 30px #FFDAB9, 30px 0 20px 30px #B0E0E6;
}
#header {
    background-image: url("https://www.sololearn.com/Uploads/header.jpg");
    background-size: cover;
}
#header img {
    display: block;
    width: 80px;
    height: 80px;
    margin: auto;
}
#header p {
    font-size: 25pt;
    color: #3b464c;
    padding-top: 5px;
    margin: 0;
    font-weight: bold;
    text-align: center;
}
.quote {
    font-size: 12pt;
    text-align: right;
    margin-top: 10px;
}
table {
    width: 100%;
}
table, th, td {
    border: 2px solid #cecece;
    border-collapse: collapse;
    text-align: center;
    table-layout: fixed;
}
.selected {
    background-color: #f36f48;
    font-weight: bold;
    color: white;
}
li {
    margin-bottom: 15px;
    font-weight: bold;
}
progress {
    width: 70%;
    height: 20px;
    color: #3fb6b2;
    background: #efefef;
}
progress::-webkit-progress-bar {
    background: #efefef;
}
progress::-webkit-progress-value {
    background: #3fb6b2;
} 
progress::-moz-progress-bar {
    color: #3fb6b2;
    background: #efefef;
}
iframe, audio {
    display: block;
    margin: 0 auto;
    border: 3px solid #3fb6b2;
}
hr {
    border: 0;
    height: 1px;
    background: #f36f48;
}
form {
    text-align: center;
    margin-top: 0;
}
.submit {
    background-color: #3fb6b2;
    padding: 12px 45px;
    border-radius: 5px;
    cursor: pointer;
    color: #ffffff;
    border: none;
    outline: none;
    margin: 0;
    font-weight: bold;
}
.submit:hover {
    background-color: #43a09d;
}
textarea {
    height: 100px;
}
input, textarea {
    margin-bottom: 10px;
    font-size: 11pt;
    padding: 15px 10px 10px;
    border: 1px solid #cecece;
    background-color: #efefef;
    color: #787575;
    border-radius: 5px;
    width: 70%;
    outline: none;
}
.face {
    transform: scale(0.4);
    margin: 0 auto;
    display: block;
    margin-top: -35px;
    margin-bottom: -25px;
}
#contacts img {
    height: 50px;
    width: 50px;
    margin-left: 7px;
    margin-right: 7px;
}
#contacts a {
    text-decoration: none;
}
#contacts img:hover {
    opacity: 0.8;
}
#contacts {
    text-align: center;
}
.copyright {
    font-size: 8pt;
    text-align: right;
    padding-bottom: 10px;
    color: grey;
}
#footer {
    border-top: 1px solid rgba(0, 0, 0, 0.3);
    background: rgba(0, 0, 0, 0.25);
    box-shadow: inset 0 1px rgba(255, 255, 255, 0.3);
    height: 40px;
}
#parent p:first-child {
    color: green;
    text-decoration: underline;
}
p::first-line {
    color: #589432;
}
p::-moz-selection {
    background: #8bc34a;
    color: #fff;
}
p::selection {
    background: #8bc34a;
    color: #fff;
    word-wrap: break-word;
}
p::before {
    content: url("http://www.sololearn.com/images/bullet.jpg");
}
p::first-line {
    font-family: "test";
}
/*
@font-face {
  font-family: Delicious; 
  src: url('Delicious-Roman.otf'); 
} 
@font-face { 
  font-family: Delicious; 
  font-weight: bold; 
  src: url('Delicious-Bold.otf'); 
}
h1{
   font-family: Delicious, sans-serif; 
}


Internet Explorer has a built-in bug when multiple @font-face rules are defined.
Using #iefix as shown below fixes the problem:

@font-face { 
   font-family: Delicious; 
   src: url('Delicious-Roman.ttf');
   src: url('Delicious-Roman.eot?#iefix'); 
}
*/
div.firstRadial {
    height: 150px;
    width: 200px;
    color: #FFF;
    background: -moz-radial-gradient(green, yellow, blue);   
    background: -webkit-radial-gradient(green, yellow, blue);
    background: -ms-radial-gradient(green, yellow, blue);
}
div.secondRadial_ {
    height: 150px;
    width: 200px;
    color: #FFF;
    background: -moz-radial-gradient(circle, green, yellow, blue); 
    background: -webkit-radial-gradient(circle, green, yellow, blue); 
    background: -ms-radial-gradient(circle, green, yellow, blue); 
}
div.thirdRadial_ {
    height: 150px;
    width: 200px;
    color: #FFF;
    background: -moz-radial-gradient(top left, green, yellow, blue);   
    background: -webkit-radial-gradient(top left, green, yellow, blue);
    background: -ms-radial-gradient(top left, green, yellow, blue);
}
div.fourthRadial {
    height: 150px;
    width: 200px;
    color: #FFF;
    background: -moz-radial-gradient(green 5%, yellow 15%, blue 60%); 
    background: -webkit-radial-gradient(green 5%, yellow 15%, blue 60%); 
    background: -ms-radial-gradient(green 5%, yellow 15%, blue 60%); 
}
div.fifthRadial {
    height: 150px;
    width: 200px;
    color: #FFF;
    background: -moz-radial-gradient(circle, green 40%, yellow 50%, blue 70%); 
    background: -webkit-radial-gradient(circle, green 40%, yellow 50%, blue 70%); 
    background: -ms-radial-gradient(circle, green 40%, yellow 50%, blue 70%); 
    /*background: radial-gradient(circle, black 20px, red 70px);*/
}
div.backgroundSize_ {
    height: 150px;
    width: 200px;
    border: 1px solid #000;
    background: url("http://www.sololearn.com/uploads/css_logo.png") no-repeat 50% 50%;
    background-size: 100px 100px;
    background-size: contain;
}
#Quiz_Q_2{
    background: radial-gradient(50px 50px, red 15px, blue 25px);
}

#first {
    border: 2px dotted black;
    padding: 20px;
    background: LightBlue;
    background-clip: padding-box;
}
#second {
    border: 2px dotted black;
    padding: 20px;
    background: LightBlue;
    background-clip: content-box;
}

#Transparent_Borders_with_background_clip{
    border: 20px solid rgba(0, 0, 0, 0.3);
    -moz-background-clip: padding-box; 
    -webkit-background-clip: padding-box; 
    background-clip: padding-box; 
    width:200px;
    position:absolute;
    top:50px;
    left:50px;
    background-color:white;
}

#Multiple_Backgrounds{
    width: 400px;
    height: 300px;
    background-image: url("http://www.sololearn.com/uploads/css_logo.png"), url("http://www.sololearn.com/uploads/better-code.jpg");
    background-position: right bottom, left top;
    background-repeat: no-repeat;
} 
#Multiple_Backgrounds_2 {
    background: url("http://www.sololearn.com/uploads/css_logo.png") right top no-repeat, 
    url("http://www.sololearn.com/uploads/better-code.jpg") left top no-repeat; 
    width: 400px;
    height: 300px;
}

#img1 {
    opacity: 1;
}
#img2 {
    opacity: 0.5;
}
#img3 {
    opacity: 0.25;
}
/* Opacity in Internet Explorer
The alpha filter is a Microsoft-only property, not a standard CSS property.
*/
#img4 {
    opacity: 0.5;
    filter: alpha(opacity=50);
}
#TransitionProperty {
    width: 50px;
    height: 50px;
    background: #32CD32;
    transition: width 3s;
    -webkit-transition: width 3s;
    /*
        transition: width 3s;
        transition: background-color 5s ease-in;
    */
}
#TransitionProperty:hover {
    width: 250px;
}
#transition_timing_function
{
    width: 50px;
    height: 50px;
    background: #32CD32;
    transition: width 3s ease-out;
    transition-timing-function: cubic-bezier(0,0,1,1);
    -webkit-transition: width 3s ease-out;
    -webkit-transition-timing-function: cubic-bezier(0,0,1,1);
}
#transition_timing_function:hover {
    width: 250px;
}
/* transform_rotate */
div.positive {
    width: 200px;
    height: 100px;
    margin-top: 30px;
    background-color: #32CD32;
    transform: rotate(10deg);
    -webkit-transform: rotate(10deg);
}
div.negative {
    width: 200px;
    height: 100px;
    margin-top: 30px;
    background-color: #32CD32;
    transform: rotate(-10deg);
    -webkit-transform: rotate(-10deg);
}
/* transform-origin */
div.empty-div {
    position: relative;
    height: 100px;
    width: 100px;
    margin: 30px;
    padding: 10px;
    border: 1px solid black;
}
div.green-div { /* The transform-origin property must be used together with the transform property.    */
    padding: 50px;
    position: absolute;
    background-color: #8bc34a;
    border: 1px solid white;
    transform: rotate(15deg);
    transform-origin: 25% 75%;/*Which choice is the default value for the transform-origin property? center */
    -webkit-transform: rotate(15deg);
    -webkit-transform-origin: 25% 75%;/* 0 0 is the same value as top left, and 100% 100% is the same value as bottom right. */
}

#Translate_Method {
    padding: 50px;
    position: absolute;
    background-color: #32CD32;
    transform:translate(100px, 50px);
    -webkit-transform:translate(100px, 50px);
}
#skew {
    padding: 50px;
    position: absolute;
    background-color: #32CD32;
    transform: skew(30deg);
    -webkit-transform: skew(30deg, 0deg);/*If the second parameter is not specified, it has a zero value.    */    
}
/*#scale*/
div.scale_first {
    width: 200px;
    height: 100px;
    background-color: #8BC34A;
    transform: scale(0.7, 0.7);
    -webkit-transform: scale(0.7, 0.7);
    color:white;
}
div.scale_second {
    margin: 60px;
    width: 200px;
    height: 100px;
    background-color: #8bc34a;
    transform: scale(1.5,1.5);
    -webkit-transform: scale(1.5,1.5);
    color:white;
}

#MultipleTransforms
{
    width: 200px;
    height: 100px;
    background-color: #8BC34A;
    transform: rotate(45deg) translate(100px);/* If you use commas to separate the functions, none of the functions will be applied, so keep in mind not to use commas. */
    -webkit-transform: rotate(45deg) translate(100px);
    color:white;
}
/* Keyframes & Animation */
#KeyframesAndAnimation {
    width: 100px;
    height: 100px;
    background-color: red;
    animation-name: colorchange;
    animation-duration: 10s;/* If the animation-duration property is not specified, the animation will have no effect, because the default value is 0. */
    -webkit-animation-name: colorchange;
    -webkit-animation-duration: 10s;
}
@keyframes colorchange {
    0% {background-color: red; }
    50% {background-color: green; }
    100% {background-color: blue; }
}
@-webkit-keyframes colorchange {
    0% {background-color: red; }
    50% {background-color: green; }
    100% {background-color: blue; }
}

/* Animation Properties */
#AnimationProperties{
    animation-name: colorchange;   
    animation-duration: 10s;/* The animation-duration property specifies the duration of the selected animation in seconds.    */
    height:100px;
    background-color:red;
    -webkit-animation-duration: 10s;
    -webkit-animation-name: colorchange; 
}
@keyframes colorchange {/* If the animation name does not match any keyframe rule, the animation will not execute.    */
    from { width: 0px; }
    to { width: 100px; }
}
@-webkit-keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}

#animation-timing-function {
    animation-name: colorchange; 
    animation-duration: 5s;
    animation-timing-function: linear;
    height:100px;
    width:0px;
    background-color:red;
    -webkit-animation-name: colorchange; 
    -webkit-animation-duration: 5s;
    -webkit-animation-timing-function: linear;
}
@keyframes colorchange {
    from { width: 0px; }
    to { width: 200px; }
}
@-webkit-keyframes colorchange {
    from { width: 0px; }
    to { width: 200px; }
}
/* animation-delay */
#animation-delay {
    animation-name: colorchange;
    animation-duration: 5s;
    animation-delay: 2s;
    height:100px;
    width:0px;
    background-color:red;
    -webkit-animation-name: colorchange;
    -webkit-animation-duration: 5s;
    -webkit-animation-delay: 2s;/* The animation-delay and animation-duration values can be defined in seconds (s) or milliseconds (ms).    */
}
@keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}
@-webkit-keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}
/*More Animation Properties*/
#animation-iteration-count {
    animation-name: colorchange;    
    animation-duration: 5s; 
    animation-delay: 2s;
    animation-iteration-count: 5;/* If you use 0 or a negative number for the animation-iteration-count, the animation will never start. */
    height:100px;
    width:0px;
    background-color:red;
    -webkit-animation-name: colorchange;    
    -webkit-animation-duration: 5s; 
    -webkit-animation-delay: 2s;
    -webkit-animation-iteration-count: 5;
}
@keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}
@-webkit-keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}
/* To make the animation repeat forever, just use the infinite value: */
#infinite {
    animation-direction: alternate;/* https://t.me/CsharpAbdullahAlsalem/95 */
    animation-name: colorchange;   
    animation-duration: 5s; 
    animation-delay: 2s;  
    animation-iteration-count: infinite;
    height:100px;
    width:0px;
    background-color:red;
    -webkit-animation-name: colorchange;   
    -webkit-animation-duration: 5s; 
    -webkit-animation-delay: 2s;  
    -webkit-animation-iteration-count: infinite;
}
@keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}
@-webkit-keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}
/* reverse */
#reverse {
    animation-name: colorchange;
    animation-duration: 3s;
    animation-timing-function: ease-in;
    animation-delay: 1s;
    animation-iteration-count: infinite;
    animation-direction: reverse;
    height:100px;
    width:0px;
    background-color:red;
    -webkit-animation-name: colorchange;
    -webkit-animation-duration: 3s;
    -webkit-animation-timing-function: ease-in;
    -webkit-animation-delay: 1s;
    -webkit-animation-iteration-count: infinite;
    -webkit-animation-direction: reverse;
}
@keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}
@-webkit-keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}

#reverseShortcut {
    animation: colorchange 3s ease-in 1s infinite reverse;/* The order in which each property is declared in the shorthand declaration is important and cannot be altered, or the animation will not work properly. */
    -webkit-animation: colorchange 3s ease-in 1s infinite reverse;
    height:100px;
    background-color:red;
    width:0px;
}
@keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}
@-webkit-keyframes colorchange {
    from { width: 0px; }
    to { width: 100px; }
}
/* 3D Transforms */
#_3D_Transforms_X {
    width:250px;
    height:100px;
    color:white;
    background-color:green;
    transform: rotateX(150deg);/* You can switch off all transformations applied to an element using the none function: transform: none; */
    -webkit-transform: rotateX(150deg);
}
#_3D_Transforms_Y {
    width:250px;
    height:100px;
    color:white;
    background-color:green;
    transform: rotateY(150deg);
    -webkit-transform: rotateY(150deg);
}
#_3D_Transforms_Z {
    width:250px;
    height:100px;
    color:white;
    background-color:green;
    transform: rotateZ(150deg);
    -webkit-transform: rotateZ(150deg);
}
/*
Like the translate3d() method, there are also scale3d() and rotate3d(), which are applicable for scaling and rotating elements in 3D.

Translation of an element is similar to relative positioning - it doesn't affect the document's flow. The translated element will keep its position in the flow and will only appear to have moved.
*/
#Translations_3D {
    transform: translateX(29px) translateY(5em) translateZ(500px);
    -webkit-transform: translateX(29px) translateY(5em) translateZ(-13px);
    width:250px;
    height:100px;
    color:white;
    background-color:green;
}
#Translations_3D_shortcut {
    transform: translate3d(-20px, 4em, 10px);
    -webkit-transform: translate3d(-20px, 4em, 10px);
    width:250px;
    height:100px;
    color:white;
    background-color:green;
}
/* Perspective 
The perspective property only affects 3D transformed elements.
*/
div.empty-div {
    position: relative;
    height: 200px;
    width: 200px;
    margin: 30px;
    padding: 10px;
    border: 1px solid black;
    perspective: 100px;
    -webkit-perspective: 100px;
}
div.green-div {
    padding: 60px;
    position: absolute;
    background-color: #8bc34a;
    border: 1px solid white;
    transform: rotateX(45deg);
    -webkit-transform: rotateX(45deg);
}
/*
Fill in the blanks to make the first letter of the paragraph red and bold. Also, flip the paragraph upside down.

p{
transform: rotate(180deg)
}

p::first-letter
{
    color: red;
    font-weight: bold;
}
*/

/* 
CSS Filters
https://t.me/CsharpAbdullahAlsalem/97
*/
.dropshadow-img {
    width: 130px;
    height: 100px;
}
.dropshadow {
    width: 130px;
    height: 100px;
    /*  filter: drop-shadow(5px 9px 2px red); تمرين */
    filter: drop-shadow(5px 9px 2px blue);/* Positive values create the shadow to the right and below the image. */
    -webkit-filter: drop-shadow(5px 9px 2px blue);/* Negative width and height values create the shadow above and to the left of the image.*/
}

.filteredGrayscale {
    filter: grayscale(50%);/* Any negative value leaves the image unchanged.*/
  }
